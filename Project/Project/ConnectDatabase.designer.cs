#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ManagerHotel_ProjectsXixao")]
	public partial class ConnectDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertTypes_Room(Types_Room instance);
    partial void UpdateTypes_Room(Types_Room instance);
    partial void DeleteTypes_Room(Types_Room instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDetails_Bill(Details_Bill instance);
    partial void UpdateDetails_Bill(Details_Bill instance);
    partial void DeleteDetails_Bill(Details_Bill instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertServicer(Servicer instance);
    partial void UpdateServicer(Servicer instance);
    partial void DeleteServicer(Servicer instance);
    #endregion
		
		public ConnectDatabaseDataContext() : 
				base(global::Project.Properties.Settings.Default.ManagerHotel_ProjectsXixaoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Types_Room> Types_Rooms
		{
			get
			{
				return this.GetTable<Types_Room>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Details_Bill> Details_Bills
		{
			get
			{
				return this.GetTable<Details_Bill>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<Servicer> Servicers
		{
			get
			{
				return this.GetTable<Servicer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RoomsAble")]
		public ISingleResult<RoomsAbleResult> RoomsAble([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string formDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(12)")] string toDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> adults, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> childrents)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), formDate, toDate, adults, childrents);
			return ((ISingleResult<RoomsAbleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.billsOfMonth")]
		public ISingleResult<billsOfMonthResult> billsOfMonth([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string dateStart, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string dateEnd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateStart, dateEnd);
			return ((ISingleResult<billsOfMonthResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.billsOfMonthByDay")]
		public ISingleResult<billsOfMonthByDayResult> billsOfMonthByDay([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date);
			return ((ISingleResult<billsOfMonthByDayResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bills")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_em;
		
		private int _id_cus;
		
		private string _dateFrom;
		
		private string _decript;
		
		private int _stt;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<System.DateTime> _date_update;
		
		private string _dateTo;
		
		private System.Nullable<double> _Prepay;
		
		private double _InputMoney;
		
		private double _OutMoney;
		
		private EntitySet<Details_Bill> _Details_Bills;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_emChanging(int value);
    partial void Onid_emChanged();
    partial void Onid_cusChanging(int value);
    partial void Onid_cusChanged();
    partial void OndateFromChanging(string value);
    partial void OndateFromChanged();
    partial void OndecriptChanging(string value);
    partial void OndecriptChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ondate_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updateChanged();
    partial void OndateToChanging(string value);
    partial void OndateToChanged();
    partial void OnPrepayChanging(System.Nullable<double> value);
    partial void OnPrepayChanged();
    partial void OnInputMoneyChanging(double value);
    partial void OnInputMoneyChanged();
    partial void OnOutMoneyChanging(double value);
    partial void OnOutMoneyChanged();
    #endregion
		
		public Bill()
		{
			this._Details_Bills = new EntitySet<Details_Bill>(new Action<Details_Bill>(this.attach_Details_Bills), new Action<Details_Bill>(this.detach_Details_Bills));
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_em", DbType="Int NOT NULL")]
		public int id_em
		{
			get
			{
				return this._id_em;
			}
			set
			{
				if ((this._id_em != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_emChanging(value);
					this.SendPropertyChanging();
					this._id_em = value;
					this.SendPropertyChanged("id_em");
					this.Onid_emChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cus", DbType="Int NOT NULL")]
		public int id_cus
		{
			get
			{
				return this._id_cus;
			}
			set
			{
				if ((this._id_cus != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cusChanging(value);
					this.SendPropertyChanging();
					this._id_cus = value;
					this.SendPropertyChanged("id_cus");
					this.Onid_cusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFrom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dateFrom
		{
			get
			{
				return this._dateFrom;
			}
			set
			{
				if ((this._dateFrom != value))
				{
					this.OndateFromChanging(value);
					this.SendPropertyChanging();
					this._dateFrom = value;
					this.SendPropertyChanged("dateFrom");
					this.OndateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decript", DbType="NVarChar(256)")]
		public string decript
		{
			get
			{
				return this._decript;
			}
			set
			{
				if ((this._decript != value))
				{
					this.OndecriptChanging(value);
					this.SendPropertyChanging();
					this._decript = value;
					this.SendPropertyChanged("decript");
					this.OndecriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL")]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_update
		{
			get
			{
				return this._date_update;
			}
			set
			{
				if ((this._date_update != value))
				{
					this.Ondate_updateChanging(value);
					this.SendPropertyChanging();
					this._date_update = value;
					this.SendPropertyChanged("date_update");
					this.Ondate_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dateTo
		{
			get
			{
				return this._dateTo;
			}
			set
			{
				if ((this._dateTo != value))
				{
					this.OndateToChanging(value);
					this.SendPropertyChanging();
					this._dateTo = value;
					this.SendPropertyChanged("dateTo");
					this.OndateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prepay", DbType="Float")]
		public System.Nullable<double> Prepay
		{
			get
			{
				return this._Prepay;
			}
			set
			{
				if ((this._Prepay != value))
				{
					this.OnPrepayChanging(value);
					this.SendPropertyChanging();
					this._Prepay = value;
					this.SendPropertyChanged("Prepay");
					this.OnPrepayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputMoney", DbType="Float NOT NULL")]
		public double InputMoney
		{
			get
			{
				return this._InputMoney;
			}
			set
			{
				if ((this._InputMoney != value))
				{
					this.OnInputMoneyChanging(value);
					this.SendPropertyChanging();
					this._InputMoney = value;
					this.SendPropertyChanged("InputMoney");
					this.OnInputMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutMoney", DbType="Float NOT NULL")]
		public double OutMoney
		{
			get
			{
				return this._OutMoney;
			}
			set
			{
				if ((this._OutMoney != value))
				{
					this.OnOutMoneyChanging(value);
					this.SendPropertyChanging();
					this._OutMoney = value;
					this.SendPropertyChanged("OutMoney");
					this.OnOutMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Details_Bill", Storage="_Details_Bills", ThisKey="id", OtherKey="id_bill")]
		public EntitySet<Details_Bill> Details_Bills
		{
			get
			{
				return this._Details_Bills;
			}
			set
			{
				this._Details_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Customer", ThisKey="id_cus", OtherKey="id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._id_cus = value.id;
					}
					else
					{
						this._id_cus = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Bill", Storage="_Employee", ThisKey="id_em", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._id_em = value.id;
					}
					else
					{
						this._id_em = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Types_Room")]
	public partial class Types_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _stt;
		
		private double _moneys;
		
		private string _descript;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<System.DateTime> _date_update;
		
		private System.Nullable<int> _AdultStandar;
		
		private System.Nullable<int> _AdultMax;
		
		private System.Nullable<int> _ChildrentStandar;
		
		private System.Nullable<int> _ChildrentMax;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OnmoneysChanging(double value);
    partial void OnmoneysChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ondate_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updateChanged();
    partial void OnAdultStandarChanging(System.Nullable<int> value);
    partial void OnAdultStandarChanged();
    partial void OnAdultMaxChanging(System.Nullable<int> value);
    partial void OnAdultMaxChanged();
    partial void OnChildrentStandarChanging(System.Nullable<int> value);
    partial void OnChildrentStandarChanged();
    partial void OnChildrentMaxChanging(System.Nullable<int> value);
    partial void OnChildrentMaxChanged();
    #endregion
		
		public Types_Room()
		{
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL")]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moneys", DbType="Float NOT NULL")]
		public double moneys
		{
			get
			{
				return this._moneys;
			}
			set
			{
				if ((this._moneys != value))
				{
					this.OnmoneysChanging(value);
					this.SendPropertyChanging();
					this._moneys = value;
					this.SendPropertyChanged("moneys");
					this.OnmoneysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="NVarChar(256)")]
		public string descript
		{
			get
			{
				return this._descript;
			}
			set
			{
				if ((this._descript != value))
				{
					this.OndescriptChanging(value);
					this.SendPropertyChanging();
					this._descript = value;
					this.SendPropertyChanged("descript");
					this.OndescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_update
		{
			get
			{
				return this._date_update;
			}
			set
			{
				if ((this._date_update != value))
				{
					this.Ondate_updateChanging(value);
					this.SendPropertyChanging();
					this._date_update = value;
					this.SendPropertyChanged("date_update");
					this.Ondate_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdultStandar", DbType="Int")]
		public System.Nullable<int> AdultStandar
		{
			get
			{
				return this._AdultStandar;
			}
			set
			{
				if ((this._AdultStandar != value))
				{
					this.OnAdultStandarChanging(value);
					this.SendPropertyChanging();
					this._AdultStandar = value;
					this.SendPropertyChanged("AdultStandar");
					this.OnAdultStandarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdultMax", DbType="Int")]
		public System.Nullable<int> AdultMax
		{
			get
			{
				return this._AdultMax;
			}
			set
			{
				if ((this._AdultMax != value))
				{
					this.OnAdultMaxChanging(value);
					this.SendPropertyChanging();
					this._AdultMax = value;
					this.SendPropertyChanged("AdultMax");
					this.OnAdultMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrentStandar", DbType="Int")]
		public System.Nullable<int> ChildrentStandar
		{
			get
			{
				return this._ChildrentStandar;
			}
			set
			{
				if ((this._ChildrentStandar != value))
				{
					this.OnChildrentStandarChanging(value);
					this.SendPropertyChanging();
					this._ChildrentStandar = value;
					this.SendPropertyChanged("ChildrentStandar");
					this.OnChildrentStandarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrentMax", DbType="Int")]
		public System.Nullable<int> ChildrentMax
		{
			get
			{
				return this._ChildrentMax;
			}
			set
			{
				if ((this._ChildrentMax != value))
				{
					this.OnChildrentMaxChanging(value);
					this.SendPropertyChanging();
					this._ChildrentMax = value;
					this.SendPropertyChanged("ChildrentMax");
					this.OnChildrentMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Types_Room_Room", Storage="_Rooms", ThisKey="id", OtherKey="id_type")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Types_Room = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Types_Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CountryCode;
		
		private string _CommonName;
		
		private string _FormalName;
		
		private string _CountryType;
		
		private string _CountrySubType;
		
		private string _Sovereignty;
		
		private string _Capital;
		
		private string _CurrencyCode;
		
		private string _CurrencyName;
		
		private string _TelephoneCode;
		
		private string _CountryCode3;
		
		private string _CountryNumber;
		
		private string _InternetCountryCode;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _IsPublished;
		
		private string _Flags;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnCommonNameChanging(string value);
    partial void OnCommonNameChanged();
    partial void OnFormalNameChanging(string value);
    partial void OnFormalNameChanged();
    partial void OnCountryTypeChanging(string value);
    partial void OnCountryTypeChanged();
    partial void OnCountrySubTypeChanging(string value);
    partial void OnCountrySubTypeChanged();
    partial void OnSovereigntyChanging(string value);
    partial void OnSovereigntyChanged();
    partial void OnCapitalChanging(string value);
    partial void OnCapitalChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnTelephoneCodeChanging(string value);
    partial void OnTelephoneCodeChanged();
    partial void OnCountryCode3Changing(string value);
    partial void OnCountryCode3Changed();
    partial void OnCountryNumberChanging(string value);
    partial void OnCountryNumberChanged();
    partial void OnInternetCountryCodeChanging(string value);
    partial void OnInternetCountryCodeChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsPublishedChanging(System.Nullable<bool> value);
    partial void OnIsPublishedChanged();
    partial void OnFlagsChanging(string value);
    partial void OnFlagsChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Country()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonName", DbType="NVarChar(100)")]
		public string CommonName
		{
			get
			{
				return this._CommonName;
			}
			set
			{
				if ((this._CommonName != value))
				{
					this.OnCommonNameChanging(value);
					this.SendPropertyChanging();
					this._CommonName = value;
					this.SendPropertyChanged("CommonName");
					this.OnCommonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormalName", DbType="NVarChar(100)")]
		public string FormalName
		{
			get
			{
				return this._FormalName;
			}
			set
			{
				if ((this._FormalName != value))
				{
					this.OnFormalNameChanging(value);
					this.SendPropertyChanging();
					this._FormalName = value;
					this.SendPropertyChanged("FormalName");
					this.OnFormalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryType", DbType="NVarChar(100)")]
		public string CountryType
		{
			get
			{
				return this._CountryType;
			}
			set
			{
				if ((this._CountryType != value))
				{
					this.OnCountryTypeChanging(value);
					this.SendPropertyChanging();
					this._CountryType = value;
					this.SendPropertyChanged("CountryType");
					this.OnCountryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountrySubType", DbType="NVarChar(100)")]
		public string CountrySubType
		{
			get
			{
				return this._CountrySubType;
			}
			set
			{
				if ((this._CountrySubType != value))
				{
					this.OnCountrySubTypeChanging(value);
					this.SendPropertyChanging();
					this._CountrySubType = value;
					this.SendPropertyChanged("CountrySubType");
					this.OnCountrySubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sovereignty", DbType="NVarChar(100)")]
		public string Sovereignty
		{
			get
			{
				return this._Sovereignty;
			}
			set
			{
				if ((this._Sovereignty != value))
				{
					this.OnSovereigntyChanging(value);
					this.SendPropertyChanging();
					this._Sovereignty = value;
					this.SendPropertyChanged("Sovereignty");
					this.OnSovereigntyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="NVarChar(100)")]
		public string Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._Capital = value;
					this.SendPropertyChanged("Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(100)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(100)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneCode", DbType="NVarChar(100)")]
		public string TelephoneCode
		{
			get
			{
				return this._TelephoneCode;
			}
			set
			{
				if ((this._TelephoneCode != value))
				{
					this.OnTelephoneCodeChanging(value);
					this.SendPropertyChanging();
					this._TelephoneCode = value;
					this.SendPropertyChanged("TelephoneCode");
					this.OnTelephoneCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode3", DbType="NVarChar(100)")]
		public string CountryCode3
		{
			get
			{
				return this._CountryCode3;
			}
			set
			{
				if ((this._CountryCode3 != value))
				{
					this.OnCountryCode3Changing(value);
					this.SendPropertyChanging();
					this._CountryCode3 = value;
					this.SendPropertyChanged("CountryCode3");
					this.OnCountryCode3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryNumber", DbType="NVarChar(100)")]
		public string CountryNumber
		{
			get
			{
				return this._CountryNumber;
			}
			set
			{
				if ((this._CountryNumber != value))
				{
					this.OnCountryNumberChanging(value);
					this.SendPropertyChanging();
					this._CountryNumber = value;
					this.SendPropertyChanged("CountryNumber");
					this.OnCountryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternetCountryCode", DbType="NVarChar(100)")]
		public string InternetCountryCode
		{
			get
			{
				return this._InternetCountryCode;
			}
			set
			{
				if ((this._InternetCountryCode != value))
				{
					this.OnInternetCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._InternetCountryCode = value;
					this.SendPropertyChanged("InternetCountryCode");
					this.OnInternetCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublished", DbType="Bit")]
		public System.Nullable<bool> IsPublished
		{
			get
			{
				return this._IsPublished;
			}
			set
			{
				if ((this._IsPublished != value))
				{
					this.OnIsPublishedChanging(value);
					this.SendPropertyChanging();
					this._IsPublished = value;
					this.SendPropertyChanged("IsPublished");
					this.OnIsPublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flags", DbType="NVarChar(50)")]
		public string Flags
		{
			get
			{
				return this._Flags;
			}
			set
			{
				if ((this._Flags != value))
				{
					this.OnFlagsChanging(value);
					this.SendPropertyChanging();
					this._Flags = value;
					this.SendPropertyChanged("Flags");
					this.OnFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Customer", Storage="_Customers", ThisKey="Id", OtherKey="id_nation")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private byte _sex;
		
		private string _car_personal;
		
		private System.Nullable<int> _adults;
		
		private System.Nullable<int> _childrens;
		
		private int _id_nation;
		
		private string _phone;
		
		private int _stt;
		
		private string _decript;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<System.DateTime> _date_update;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(byte value);
    partial void OnsexChanged();
    partial void Oncar_personalChanging(string value);
    partial void Oncar_personalChanged();
    partial void OnadultsChanging(System.Nullable<int> value);
    partial void OnadultsChanged();
    partial void OnchildrensChanging(System.Nullable<int> value);
    partial void OnchildrensChanged();
    partial void Onid_nationChanging(int value);
    partial void Onid_nationChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OndecriptChanging(string value);
    partial void OndecriptChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ondate_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updateChanged();
    #endregion
		
		public Customer()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="TinyInt NOT NULL")]
		public byte sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_personal", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string car_personal
		{
			get
			{
				return this._car_personal;
			}
			set
			{
				if ((this._car_personal != value))
				{
					this.Oncar_personalChanging(value);
					this.SendPropertyChanging();
					this._car_personal = value;
					this.SendPropertyChanged("car_personal");
					this.Oncar_personalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adults", DbType="Int")]
		public System.Nullable<int> adults
		{
			get
			{
				return this._adults;
			}
			set
			{
				if ((this._adults != value))
				{
					this.OnadultsChanging(value);
					this.SendPropertyChanging();
					this._adults = value;
					this.SendPropertyChanged("adults");
					this.OnadultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_childrens", DbType="Int")]
		public System.Nullable<int> childrens
		{
			get
			{
				return this._childrens;
			}
			set
			{
				if ((this._childrens != value))
				{
					this.OnchildrensChanging(value);
					this.SendPropertyChanging();
					this._childrens = value;
					this.SendPropertyChanged("childrens");
					this.OnchildrensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_nation", DbType="Int NOT NULL")]
		public int id_nation
		{
			get
			{
				return this._id_nation;
			}
			set
			{
				if ((this._id_nation != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_nationChanging(value);
					this.SendPropertyChanging();
					this._id_nation = value;
					this.SendPropertyChanged("id_nation");
					this.Onid_nationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL")]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decript", DbType="NVarChar(256)")]
		public string decript
		{
			get
			{
				return this._decript;
			}
			set
			{
				if ((this._decript != value))
				{
					this.OndecriptChanging(value);
					this.SendPropertyChanging();
					this._decript = value;
					this.SendPropertyChanged("decript");
					this.OndecriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_update
		{
			get
			{
				return this._date_update;
			}
			set
			{
				if ((this._date_update != value))
				{
					this.Ondate_updateChanging(value);
					this.SendPropertyChanging();
					this._date_update = value;
					this.SendPropertyChanged("date_update");
					this.Ondate_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Bill", Storage="_Bills", ThisKey="id", OtherKey="id_cus")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Customer", Storage="_Country", ThisKey="id_nation", OtherKey="Id", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._id_nation = value.Id;
					}
					else
					{
						this._id_nation = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Details_Bill")]
	public partial class Details_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_bill;
		
		private int _id_ser;
		
		private byte _quantity;
		
		private int _id_room;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<Servicer> _Servicer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_billChanging(int value);
    partial void Onid_billChanged();
    partial void Onid_serChanging(int value);
    partial void Onid_serChanged();
    partial void OnquantityChanging(byte value);
    partial void OnquantityChanged();
    partial void Onid_roomChanging(int value);
    partial void Onid_roomChanged();
    #endregion
		
		public Details_Bill()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Room = default(EntityRef<Room>);
			this._Servicer = default(EntityRef<Servicer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bill", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_bill
		{
			get
			{
				return this._id_bill;
			}
			set
			{
				if ((this._id_bill != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_billChanging(value);
					this.SendPropertyChanging();
					this._id_bill = value;
					this.SendPropertyChanged("id_bill");
					this.Onid_billChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_ser
		{
			get
			{
				return this._id_ser;
			}
			set
			{
				if ((this._id_ser != value))
				{
					if (this._Servicer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_serChanging(value);
					this.SendPropertyChanging();
					this._id_ser = value;
					this.SendPropertyChanged("id_ser");
					this.Onid_serChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="TinyInt NOT NULL")]
		public byte quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_room", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_room
		{
			get
			{
				return this._id_room;
			}
			set
			{
				if ((this._id_room != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_roomChanging(value);
					this.SendPropertyChanging();
					this._id_room = value;
					this.SendPropertyChanged("id_room");
					this.Onid_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Details_Bill", Storage="_Bill", ThisKey="id_bill", OtherKey="id", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.Details_Bills.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.Details_Bills.Add(this);
						this._id_bill = value.id;
					}
					else
					{
						this._id_bill = default(int);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Details_Bill", Storage="_Room", ThisKey="id_room", OtherKey="id", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Details_Bills.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Details_Bills.Add(this);
						this._id_room = value.id;
					}
					else
					{
						this._id_room = default(int);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicer_Details_Bill", Storage="_Servicer", ThisKey="id_ser", OtherKey="id", IsForeignKey=true)]
		public Servicer Servicer
		{
			get
			{
				return this._Servicer.Entity;
			}
			set
			{
				Servicer previousValue = this._Servicer.Entity;
				if (((previousValue != value) 
							|| (this._Servicer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicer.Entity = null;
						previousValue.Details_Bills.Remove(this);
					}
					this._Servicer.Entity = value;
					if ((value != null))
					{
						value.Details_Bills.Add(this);
						this._id_ser = value.id;
					}
					else
					{
						this._id_ser = default(int);
					}
					this.SendPropertyChanged("Servicer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _phone;
		
		private string _pass;
		
		private string _avt;
		
		private int _stt;
		
		private string _decript;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<System.DateTime> _date_update;
		
		private EntitySet<Bill> _Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnavtChanging(string value);
    partial void OnavtChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OndecriptChanging(string value);
    partial void OndecriptChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ondate_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updateChanged();
    #endregion
		
		public Employee()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(32)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(125)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(125)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avt", DbType="VarChar(256)")]
		public string avt
		{
			get
			{
				return this._avt;
			}
			set
			{
				if ((this._avt != value))
				{
					this.OnavtChanging(value);
					this.SendPropertyChanging();
					this._avt = value;
					this.SendPropertyChanged("avt");
					this.OnavtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL")]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decript", DbType="NVarChar(256)")]
		public string decript
		{
			get
			{
				return this._decript;
			}
			set
			{
				if ((this._decript != value))
				{
					this.OndecriptChanging(value);
					this.SendPropertyChanging();
					this._decript = value;
					this.SendPropertyChanged("decript");
					this.OndecriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_update
		{
			get
			{
				return this._date_update;
			}
			set
			{
				if ((this._date_update != value))
				{
					this.Ondate_updateChanging(value);
					this.SendPropertyChanging();
					this._date_update = value;
					this.SendPropertyChanged("date_update");
					this.Ondate_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Bill", Storage="_Bills", ThisKey="id", OtherKey="id_em")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rooms")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _id_type;
		
		private string _address_room;
		
		private string _descript;
		
		private int _stt;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<System.DateTime> _date_update;
		
		private EntitySet<Details_Bill> _Details_Bills;
		
		private EntityRef<Types_Room> _Types_Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void Onaddress_roomChanging(string value);
    partial void Onaddress_roomChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ondate_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updateChanged();
    #endregion
		
		public Room()
		{
			this._Details_Bills = new EntitySet<Details_Bill>(new Action<Details_Bill>(this.attach_Details_Bills), new Action<Details_Bill>(this.detach_Details_Bills));
			this._Types_Room = default(EntityRef<Types_Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", DbType="Int NOT NULL")]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					if (this._Types_Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_room", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string address_room
		{
			get
			{
				return this._address_room;
			}
			set
			{
				if ((this._address_room != value))
				{
					this.Onaddress_roomChanging(value);
					this.SendPropertyChanging();
					this._address_room = value;
					this.SendPropertyChanged("address_room");
					this.Onaddress_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="NVarChar(256)")]
		public string descript
		{
			get
			{
				return this._descript;
			}
			set
			{
				if ((this._descript != value))
				{
					this.OndescriptChanging(value);
					this.SendPropertyChanging();
					this._descript = value;
					this.SendPropertyChanged("descript");
					this.OndescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL")]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_update
		{
			get
			{
				return this._date_update;
			}
			set
			{
				if ((this._date_update != value))
				{
					this.Ondate_updateChanging(value);
					this.SendPropertyChanging();
					this._date_update = value;
					this.SendPropertyChanged("date_update");
					this.Ondate_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Details_Bill", Storage="_Details_Bills", ThisKey="id", OtherKey="id_room")]
		public EntitySet<Details_Bill> Details_Bills
		{
			get
			{
				return this._Details_Bills;
			}
			set
			{
				this._Details_Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Types_Room_Room", Storage="_Types_Room", ThisKey="id_type", OtherKey="id", IsForeignKey=true)]
		public Types_Room Types_Room
		{
			get
			{
				return this._Types_Room.Entity;
			}
			set
			{
				Types_Room previousValue = this._Types_Room.Entity;
				if (((previousValue != value) 
							|| (this._Types_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Types_Room.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Types_Room.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._id_type = value.id;
					}
					else
					{
						this._id_type = default(int);
					}
					this.SendPropertyChanged("Types_Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicers")]
	public partial class Servicer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private double _price;
		
		private System.Nullable<double> _sale;
		
		private int _stt;
		
		private string _descript;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<System.DateTime> _date_update;
		
		private EntitySet<Details_Bill> _Details_Bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnsaleChanging(System.Nullable<double> value);
    partial void OnsaleChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ondate_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_updateChanged();
    #endregion
		
		public Servicer()
		{
			this._Details_Bills = new EntitySet<Details_Bill>(new Action<Details_Bill>(this.attach_Details_Bills), new Action<Details_Bill>(this.detach_Details_Bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale", DbType="Float")]
		public System.Nullable<double> sale
		{
			get
			{
				return this._sale;
			}
			set
			{
				if ((this._sale != value))
				{
					this.OnsaleChanging(value);
					this.SendPropertyChanging();
					this._sale = value;
					this.SendPropertyChanged("sale");
					this.OnsaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL")]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="NVarChar(256)")]
		public string descript
		{
			get
			{
				return this._descript;
			}
			set
			{
				if ((this._descript != value))
				{
					this.OndescriptChanging(value);
					this.SendPropertyChanging();
					this._descript = value;
					this.SendPropertyChanged("descript");
					this.OndescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_update", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_update
		{
			get
			{
				return this._date_update;
			}
			set
			{
				if ((this._date_update != value))
				{
					this.Ondate_updateChanging(value);
					this.SendPropertyChanging();
					this._date_update = value;
					this.SendPropertyChanged("date_update");
					this.Ondate_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicer_Details_Bill", Storage="_Details_Bills", ThisKey="id", OtherKey="id_ser")]
		public EntitySet<Details_Bill> Details_Bills
		{
			get
			{
				return this._Details_Bills;
			}
			set
			{
				this._Details_Bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Servicer = this;
		}
		
		private void detach_Details_Bills(Details_Bill entity)
		{
			this.SendPropertyChanging();
			entity.Servicer = null;
		}
	}
	
	public partial class RoomsAbleResult
	{
		
		private int _id;
		
		private string _name;
		
		private string _typeRoom;
		
		private double _price;
		
		private string _address_room;
		
		private System.Nullable<int> _AdultMax;
		
		private System.Nullable<int> _ChildrentMax;
		
		private System.Nullable<int> _AdultStandar;
		
		private System.Nullable<int> _ChildrentStandar;
		
		public RoomsAbleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeRoom", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string typeRoom
		{
			get
			{
				return this._typeRoom;
			}
			set
			{
				if ((this._typeRoom != value))
				{
					this._typeRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this._price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_room", DbType="NVarChar(125) NOT NULL", CanBeNull=false)]
		public string address_room
		{
			get
			{
				return this._address_room;
			}
			set
			{
				if ((this._address_room != value))
				{
					this._address_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdultMax", DbType="Int")]
		public System.Nullable<int> AdultMax
		{
			get
			{
				return this._AdultMax;
			}
			set
			{
				if ((this._AdultMax != value))
				{
					this._AdultMax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrentMax", DbType="Int")]
		public System.Nullable<int> ChildrentMax
		{
			get
			{
				return this._ChildrentMax;
			}
			set
			{
				if ((this._ChildrentMax != value))
				{
					this._ChildrentMax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdultStandar", DbType="Int")]
		public System.Nullable<int> AdultStandar
		{
			get
			{
				return this._AdultStandar;
			}
			set
			{
				if ((this._AdultStandar != value))
				{
					this._AdultStandar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrentStandar", DbType="Int")]
		public System.Nullable<int> ChildrentStandar
		{
			get
			{
				return this._ChildrentStandar;
			}
			set
			{
				if ((this._ChildrentStandar != value))
				{
					this._ChildrentStandar = value;
				}
			}
		}
	}
	
	public partial class billsOfMonthResult
	{
		
		private string _dateFrom;
		
		private System.Nullable<int> _num;
		
		public billsOfMonthResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFrom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dateFrom
		{
			get
			{
				return this._dateFrom;
			}
			set
			{
				if ((this._dateFrom != value))
				{
					this._dateFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this._num = value;
				}
			}
		}
	}
	
	public partial class billsOfMonthByDayResult
	{
		
		private string _dateFrom;
		
		private System.Nullable<int> _num;
		
		public billsOfMonthByDayResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFrom", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string dateFrom
		{
			get
			{
				return this._dateFrom;
			}
			set
			{
				if ((this._dateFrom != value))
				{
					this._dateFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this._num = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
